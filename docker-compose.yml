version: '3.8'

services:
  chroma:
    image: chromadb/chroma
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/data
    environment:
      - ALLOW_RESET=TRUE
      - CHROMA_SERVER_AUTHN_CREDENTIALS=admin:admin  # Optional auth

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  celery-worker:
    build: 
      context: ./flask-api
      dockerfile: Dockerfile
    command: celery -A tasks worker --loglevel=info
    volumes:
      - ./flask-api/app:/app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - chroma

  flask-api:
    build:
      context: ./flask-api
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CHROMA_SERVER_HOST=http://chroma:8000  # Connect to Chroma service
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./flask-api/app:/app
    depends_on:
      - chroma
      - redis
      - celery-worker

  gradio-ui:
    build:
      context: ./gradio-ui
      dockerfile: Dockerfile
    ports:
      - "7860:7860"
    environment:
      - FLASK_API_URL=http://flask-api:5000/summarize
      - FLASK_API_URL_ASK=http://flask-api:5000/ask
    depends_on:
      - flask-api

volumes:
  chroma_data:  # Persistent storage for ChromaDB